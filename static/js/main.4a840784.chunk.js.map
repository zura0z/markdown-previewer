{"version":3,"sources":["App.js","index.js"],"names":["marked","setOptions","breaks","App","state","text","icon1","icon2","expandedEditor","expandedPreview","first","React","createRef","second","firstHeader","secondHeader","defaultText","changeView1","setState","current","style","display","width","changeView2","this","ref","className","onClick","id","value","onChange","e","target","dangerouslySetInnerHTML","__html","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAIAA,IAAOC,WAAW,CACdC,QAAQ,I,IAuIKC,E,4MAnIbC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,eAAgB,GAChBC,gBAAiB,I,EAEnBC,MAAQC,IAAMC,Y,EACdC,OAASF,IAAMC,Y,EACfE,YAAcH,IAAMC,Y,EACpBG,aAAeJ,IAAMC,Y,EAErBI,Y,w1CA0DAC,YAAc,WACa,6BAArB,EAAKb,MAAME,OACb,EAAKY,SAAS,CACZZ,MAAO,6BACPE,eAAgB,oBAElB,EAAKK,OAAOM,QAAQC,MAAMC,QAAU,OACpC,EAAKP,YAAYK,QAAQC,MAAME,MAAQ,qBAEvC,EAAKT,OAAOM,QAAQC,MAAMC,QAAU,QACpC,EAAKP,YAAYK,QAAQC,MAAME,MAAQ,OACvC,EAAKJ,SAAS,CAAEZ,MAAO,2BAA4BE,eAAgB,O,EAGvEe,YAAc,WACa,6BAArB,EAAKnB,MAAMG,OACb,EAAKW,SAAS,CACZX,MAAO,6BACPE,gBAAiB,qBAEnB,EAAKC,MAAMS,QAAQC,MAAMC,QAAU,OACnC,EAAKN,aAAaI,QAAQC,MAAME,MAAQ,qBAExC,EAAKZ,MAAMS,QAAQC,MAAMC,QAAU,OACnC,EAAKN,aAAaI,QAAQC,MAAME,MAAQ,mBACxC,EAAKJ,SAAS,CAAEX,MAAO,2BAA4BE,gBAAiB,O,kEAlCtEe,KAAKN,SAAS,CACZb,KAAMmB,KAAKR,YACXV,MAAO,2BACPC,MAAO,2BACPC,eAAgB,GAChBC,gBAAiB,O,+BAiCX,IAAD,OACP,OACE,8BACE,yBAAKgB,IAAKD,KAAKd,MAAOgB,UAAU,cAC9B,yBAAKD,IAAKD,KAAKV,YAAaY,UAAU,UACpC,qCACA,uBAAGC,QAASH,KAAKP,YAAaS,UAAWF,KAAKpB,MAAME,SAEtD,8BACEsB,GAAG,SACHF,UAAS,iBAAYF,KAAKpB,MAAMI,gBAChCqB,MAAOL,KAAKpB,MAAMC,KAClByB,SAAU,SAACC,GAAD,OAAO,EAAKb,SAAS,CAAEb,KAAM0B,EAAEC,OAAOH,YAIpD,yBAAKJ,IAAKD,KAAKX,QACb,yBAAKY,IAAKD,KAAKT,aAAcW,UAAU,WACrC,wCACA,uBAAGC,QAASH,KAAKD,YAAaG,UAAWF,KAAKpB,MAAMG,SAEtD,yBACEmB,UAAS,kBAAaF,KAAKpB,MAAMK,iBACjCmB,GAAG,UACHK,wBAAyB,CAAEC,OAAQlC,IAAOwB,KAAKpB,MAAMC,e,GA5H/CM,IAAMwB,WCJ1BC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.4a840784.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport marked from \"marked\";\r\n\r\nmarked.setOptions({\r\n    breaks: true,\r\n  });\r\n  \r\n  class App extends React.Component {\r\n    state = {\r\n      text: \"\",\r\n      icon1: \"\",\r\n      icon2: \"\",\r\n      expandedEditor: \"\",\r\n      expandedPreview: \"\",\r\n    };\r\n    first = React.createRef();\r\n    second = React.createRef();\r\n    firstHeader = React.createRef();\r\n    secondHeader = React.createRef();\r\n  \r\n    defaultText = \r\n    `# Welcome to my React Markdown Previewer!\r\n  \r\n  ## This is a sub-heading...  \r\n  ### And here's some other cool stuff:  \r\n    \r\n  Heres some code, \\`<div></div>\\`, between 2 backticks.  \r\n  \r\n  \\`\\`\\`  \r\n  // this is multi-line code:  \r\n  \r\n  function anotherExample(firstLine, lastLine) {  \r\n    if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {  \r\n      return multiLineCode;  \r\n    }  \r\n  }  \r\n  \\`\\`\\`  \r\n    \r\n  You can also make text **bold**... whoa!  \r\n  Or _italic_.  \r\n  Or... wait for it... **_both!_**  \r\n  And feel free to go crazy ~~crossing stuff out~~.  \r\n    \r\n  There's also [links](https://www.freecodecamp.com), and  \r\n  > Block Quotes!  \r\n    \r\n  And if you want to get really crazy, even tables:  \r\n    \r\n  Wild Header | Crazy Header | Another Header?  \r\n  ------------ | ------------- | -------------   \r\n  Your content can | be here, and it | can be here....  \r\n  And here. | Okay. | I think we get it.  \r\n    \r\n  - And of course there are lists.  \r\n    - Some are bulleted.  \r\n       - With different indentation levels.  \r\n          - That look like this.  \r\n    \r\n    \r\n  1. And there are numbererd lists too.  \r\n  1. Use just 1s if you want!   \r\n  1. But the list goes on...  \r\n  - Even if you use dashes or asterisks.  \r\n  * And last but not least, let's not forget embedded images:  \r\n    \r\n  ![React Logo w/ Text](https://goo.gl/Umyytc)  \r\n  `\r\n  \r\n    componentDidMount() {\r\n      this.setState({\r\n        text: this.defaultText,\r\n        icon1: \"fas fa-expand-arrows-alt\",\r\n        icon2: \"fas fa-expand-arrows-alt\",\r\n        expandedEditor: \"\",\r\n        expandedPreview: \"\",\r\n      });\r\n    }\r\n  \r\n    changeView1 = () => {\r\n      if (this.state.icon1 === \"fas fa-expand-arrows-alt\") {\r\n        this.setState({\r\n          icon1: \"fas fa-compress-arrows-alt\",\r\n          expandedEditor: \"expanded-editor\",\r\n        });\r\n        this.second.current.style.display = \"none\";\r\n        this.firstHeader.current.style.width = \"calc(95% + 10px)\";\r\n      } else {\r\n        this.second.current.style.display = \"block\";\r\n        this.firstHeader.current.style.width = \"30pc\";\r\n        this.setState({ icon1: \"fas fa-expand-arrows-alt\", expandedEditor: \"\" });\r\n      }\r\n    };\r\n    changeView2 = () => {\r\n      if (this.state.icon2 === \"fas fa-expand-arrows-alt\") {\r\n        this.setState({\r\n          icon2: \"fas fa-compress-arrows-alt\",\r\n          expandedPreview: \"expanded-preview\",\r\n        });\r\n        this.first.current.style.display = \"none\";\r\n        this.secondHeader.current.style.width = \"calc(90% + 60px)\";\r\n      } else {\r\n        this.first.current.style.display = \"flex\";\r\n        this.secondHeader.current.style.width = \"calc(60% + 60px)\";\r\n        this.setState({ icon2: \"fas fa-expand-arrows-alt\", expandedPreview: \"\" });\r\n      }\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <main>\r\n          <div ref={this.first} className=\"textEditor\">\r\n            <div ref={this.firstHeader} className=\"header\">\r\n              <p>Editor</p>\r\n              <i onClick={this.changeView1} className={this.state.icon1}></i>\r\n            </div>\r\n            <textarea\r\n              id=\"editor\"\r\n              className={`editor ${this.state.expandedEditor}`}\r\n              value={this.state.text}\r\n              onChange={(e) => this.setState({ text: e.target.value })}\r\n            ></textarea>\r\n          </div>\r\n  \r\n          <div ref={this.second}>\r\n            <div ref={this.secondHeader} className=\"header2\">\r\n              <p>Previewer</p>\r\n              <i onClick={this.changeView2} className={this.state.icon2}></i>\r\n            </div>\r\n            <div\r\n              className={`preview ${this.state.expandedPreview}`}\r\n              id=\"preview\"\r\n              dangerouslySetInnerHTML={{ __html: marked(this.state.text) }}\r\n            ></div>\r\n          </div>\r\n        </main>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}